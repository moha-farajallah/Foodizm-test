<?php
/**
 * Copyright Â© Intenso Commerce. All rights reserved.
 * See License.txt for license details.
 */

// @codingStandardsIgnoreFile

/**
 * @var $block \Intenso\Review\Block\Map\Post
 */
?>
<?php $ratingData = $block->getFormData()->getRating(); ?>
<?php $helper = $this->helper(\Intenso\Review\Helper\Data::class); ?>
<div class="block review-add intenso-review-form">
    <div class="block-content">
        <form action="<?php /* @escapeNotVerified */ echo $block->getAction() ?>" class="review-form" method="get" id="review-form" data-role="product-review-form" data-bind="scope: 'review-form'">
            <?php echo $block->getChildHtml('form_fields_before')?>
            <fieldset class="fieldset review-fieldset" data-hasrequired="<?php __('* Required Fields'); ?>">
                <?php if ($block->getRatings() && $block->getRatings()->getSize()): ?>
                <span id="input-message-box"></span>
                <fieldset class="field required review-field-ratings">
                    <legend class="label"><span><?php /* @escapeNotVerified */ echo __('Your Rating') ?></span></legend><br/>
                    <div class="control">
                        <div class="nested" id="product-review-table">
                            <?php foreach ($block->getRatings() as $_rating): ?>
                                <?php $id = md5($_rating->getRatingCode()); ?>
                                <div class="field choice review-field-rating">
                                    <label class="label" id="<?= $id ?>_rating_label"><span><?php echo $block->escapeHtml($_rating->getRatingCode()) ?></span></label>
                                    <div class="control review-control-vote">
                                    <?php $options = $_rating->getOptions();?>
                                    <?php $iterator = 1; foreach ($options as $_option): ?>
                                        <input
                                            type="radio"
                                            name="rating[<?php /* @escapeNotVerified */ echo $_rating->getId() ?>]"
                                            id="<?= $id ?>_<?php /* @escapeNotVerified */ echo $_option->getValue() ?>"
                                            value="<?php /* @escapeNotVerified */ echo $_option->getId() ?>"
                                            class="radio"
                                            data-validate="{required:true, messages:{required:'<?= __('Please select one of each of the ratings above.') ?>'}}"
                                            aria-labelledby="<?= $id ?>_rating_label"
                                            <?php if (isset($ratingData[$_rating->getId()]) && $ratingData[$_rating->getId()] == $_option->getId()): ?>checked<?php endif; ?>>
                                        <label
                                            class="rating-<?php /* @escapeNotVerified */ echo $iterator; ?>"
                                            for="<?= $id ?>_<?php /* @escapeNotVerified */ echo $_option->getValue() ?>"
                                            title="<?php /* @escapeNotVerified */ echo __('%1 %2', $iterator, $iterator > 1 ? 'stars' : 'star') ?>"
                                            id="<?= $id ?>_<?php /* @escapeNotVerified */ echo $_option->getValue() ?>_label">
                                            <span><?php /* @escapeNotVerified */ echo __('%1 %2', $iterator, $iterator > 1 ? 'stars' : 'star') ?></span>
                                        </label>
                                    <?php $iterator++; ?>
                                    <?php endforeach; ?>
                                    </div>
                                </div>
                            <?php endforeach; ?>
                        </div>
                        <input type="hidden" name="token" value="<?php /* @escapeNotVerified */ echo $block->getFormData()->getToken(); ?>" />
                        <input type="hidden" name="submit" value="1" />
                    </div>
                </fieldset>
            <?php endif ?>
                <div class="field review-field-summary required">
                    <label for="summary_field" class="label"><span><?php /* @escapeNotVerified */ echo __('Summary') ?></span></label>
                    <div class="control">
                        <input type="text" name="title" id="summary_field" class="input-text" data-validate="{required:true}" value="<?php echo $block->escapeHtml($block->getFormData()->getTitle()) ?>" data-bind="value: review().title" />
                    </div>
                </div>
                <div class="field review-field-text required">
                    <label for="review_field" class="label"><span><?php /* @escapeNotVerified */ echo __('Review') ?></span></label>
                    <div class="control">
                        <textarea name="detail" id="review_field" cols="5" rows="3" data-validate="{required:true}" data-bind="value: review().detail"><?php echo $block->escapeHtml($block->getFormData()->getDetail()) ?></textarea>
                    </div>
                </div>
                <div class="dropzone-previews"></div>
            </fieldset>
            <div class="actions-toolbar review-form-actions">
                <div class="primary actions-primary">
                    <?php if ($helper->canUploadPhotos()): ?>
                        <button type="button" class="intenso-add-map-photos-button"><span><?php /* @escapeNotVerified */ echo __('Add Photos') ?></span></button>
                    <?php endif; ?>
                    <button type="submit" class="action submit primary intenso-submit-map-review"><span><?php /* @escapeNotVerified */ echo __('Submit Review') ?></span></button>
                </div>
            </div>
        </form>
        <script type="text/x-magento-init">
        {
            "#review-form": {
                "Magento_Review/js/error-placement": {}
            },
            "*": {
                "Intenso_Review/js/intenso-review": {}
            }
        }
        </script>
        <script>
            require([
                'jquery',
                'Intenso_Review/js/dropzone',
                'Intenso_Review/js/load-image/load-image',
                'Intenso_Review/js/load-image/load-image-exif',
                'Intenso_Review/js/load-image/load-image-orientation',
                'jquery/ui',
                'mage/translate'
            ], function($, Dropzone, loadImage) {
                var self = this,
                    dropzoneUploader,
                    $form = $('#review-form');

                // init Dropzone uploader
                if (typeof dropzoneUploader === 'undefined' && $('.dropzone-previews').length) {
                    dropzoneUploader = new Dropzone(document.body, {
                        url: '<?php echo $helper->imgPostAction(); ?>',
                        previewsContainer: '.dropzone-previews',
                        createImageThumbnails: false,
                        dictDefaultMessage: 'Drop photos here or click to upload.',
                        dictInvalidFileType: 'Allowed formats are: .jpg, .jpeg, .png, .bmp and .gif',
                        dictFileTooBig: 'The file size can\'t exceed 10MB',
                        dictCancelUpload: 'Remove',
                        thumbnailWidth: 120,
                        thumbnailHeight: 120,
                        parallelUploads: 5,
                        maxFilesize: 10,
                        addRemoveLinks: true,
                        maxFiles: 5,
                        acceptedFiles: '.jpg,.jpeg,.png,.gif,.bmp',
                        clickable: '.intenso-add-map-photos-button'
                    });
                    dropzoneUploader.on('maxfilesreached', function() {
                        $('.intenso-add-map-photos-button').prop('disabled', true);
                    });
                    dropzoneUploader.on("maxfilesexceeded", function(file) {
                        this.removeFile(file);
                        $('.intenso-add-map-photos-button').prop('disabled', true);
                        if (!$('.intenso-modal .modal-footer').find('.intenso-review-maxfilesexceeded').length) {
                            $('<div class="intenso-review-maxfilesexceeded">You can upload a maximum of 5 photos</div>').insertBefore('.intenso-add-map-photos-button');
                            setTimeout(function() {
                                $('.intenso-review-maxfilesexceeded').fadeOut(1000, function() { $(this).remove(); });
                            }, 5000);
                        }
                    });
                    // post
                    dropzoneUploader.on('sending', function(file, xhr, formData) {
                        formData.append('form_key', $('input[name="form_key"]').val());
                        formData.append('image', file);
                        $('.intenso-submit-map-review').prop('disabled', true);
                    });
                    // add hidden input with name of the uploaded file
                    dropzoneUploader.on('success', function(file, response) {
                        if (response['success']) {
                            $('<input>').attr({
                                type: 'hidden',
                                name: 'image[]',
                                'data-original-name': response['originalName'],
                                value: response['file']
                            }).appendTo($form);
                        } else {
                            alert(response['message']);
                        }
                        $('.intenso-submit-map-review').prop('disabled', false);
                    });
                    // remove hidden input when user clicks the delete button and enable upload button
                    dropzoneUploader.on('removedfile', function(file) {
                        $('.intenso-add-map-photos-button').prop('disabled', false);
                        $('input[type="hidden"][data-original-name="' + file.name + '"]').remove();
                    });
                    // fix thumbnail orientation
                    dropzoneUploader.on('addedfile', function(file) {
                        var self = this;
                        loadImage.parseMetaData(file, function (data) {
                            // use embedded thumbnail if exists.
                            if (data.exif) {
                                var orientation = data.exif.get('Orientation');
                                if (orientation) {
                                    loadImage(file, function (img) {
                                        self.emit('thumbnail', file, img.toDataURL());
                                    }, { orientation: orientation });
                                    return;
                                }
                            }
                            self.createThumbnail(file);
                        });
                    });
                }
            });
        </script>
    </div>
</div>
